# -*- mode: sh -*-

# Sample ENV file
# ===============
# This file is a shell script which is just variables
# which are then copied over to the vagrant virtual machine
# Note: Since this is a shell script, the variables contained herein
# *must* not contain a space between the variable name and the
# variable value.
# e.g. valid:   'GITHUB_PRIVATE_KEY=/path/to/key'
#      invalid: 'GITHUB_PRIVATE_KEY = /path/to/key'

# Github SSH Key
# --------------
# path to private key to be used to access github
# By default, this is located at ~/.ssh/id_rsa

# Note: If you have a passphrase on your private key, you are going to
# have problems. Please create a new key pair w/o a passphrase,
# add it to Github, and use it here

# Examples:
# GITHUB_PRIVATE_KEY=~/.ssh/id_rsa
# GITHUB_PRIVATE_KEY=~/.ssh/id_rsa_other
GITHUB_PRIVATE_KEY=~/.ssh/id_rsa

# Scalr Credentials
# -----------------
# The production application is deployed on the Scalr platform.
# Vagrant needs scalr access to acquire
# * production content (stuff like flash files, images by content team)
# * "live" data (like massive school systems)

# Scalr credentials may be provided in one of two ways:
# * Pointing us to the file that contains your scalr access key credentials, or
# * Adding the literal keys here as variables

# Examples:
# SCALR_CREDENTIALS_FILE=~/.ttm_scalr_access_info
# SCALR_CREDENTIALS_FILE=/path/to/existing/location/access_info
SCALR_CREDENTIALS_FILE=~/.ttm_scalr_access_info

# Alternatively, if the above is blank or not a file,
# the following will be used:
# SCALR_KEY_ID=<Your Key ID>
SCALR_KEY_ID=<YOUR_KEY_ID>

# This will be much longer than the above Key ID
# SCALR_ACCESS_KEY=<Your Key>
SCALR_ACCESS_KEY=<YOUR_ACCESS_KEY>

# Apangea branch name
# When this setup process clones the apangea repository,
# this is the branch that will be cloned.
# APANGEA_CLONE_BRANCH_NAME=rc
APANGEA_CLONE_BRANCH_NAME=rc
